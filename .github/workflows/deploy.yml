name: Deploy to Minikube

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Code
      uses: actions/checkout@v3

    - name: Set up SSH
      uses: webfactory/ssh-agent@v0.5.3
      with:
        ssh-private-key: ${{ secrets.EC2_SSH_KEY }}
        
    - name: Write SSH Key to File
      run: |
        echo "${{ secrets.EC2_SSH_KEY }}" > ec2_key.pem
        chmod 600 ec2_key.pem

    - name: Copy Manifests to EC2
      run: |
        scp -o StrictHostKeyChecking=no -i ec2_key.pem deployment.yaml ubuntu@${{ secrets.EC2_PUBLIC_IP }}:/home/ubuntu/
        scp -o StrictHostKeyChecking=no -i ec2_key.pem service.yaml ubuntu@${{ secrets.EC2_PUBLIC_IP }}:/home/ubuntu/

    - name: Start Minikube
      run: |
        ssh -o StrictHostKeyChecking=no -i ec2_key.pem ubuntu@${{ secrets.EC2_PUBLIC_IP }} <<EOF
        minikube start --driver=docker --memory=2048 --cpus=2
        EOF

    - name: Configure kubectl for Minikube
      run: |
        ssh -o StrictHostKeyChecking=no -i ec2_key.pem ubuntu@${{ secrets.EC2_PUBLIC_IP }} <<EOF
        kubectl config use-context minikube
        kubectl get nodes
        EOF

    - name: Validate YAML Manifests
      run: |
        ssh -o StrictHostKeyChecking=no -i ec2_key.pem ubuntu@${{ secrets.EC2_PUBLIC_IP }} <<EOF
        kubectl apply --dry-run=client -f /home/ubuntu/deployment.yaml
        kubectl apply --dry-run=client -f /home/ubuntu/service.yaml
        EOF

    - name: Deploy to Minikube
      run: |
        ssh -o StrictHostKeyChecking=no -i ec2_key.pem ubuntu@${{ secrets.EC2_PUBLIC_IP }} <<EOF
        kubectl apply -f /home/ubuntu/deployment.yaml
        kubectl apply -f /home/ubuntu/service.yaml
        EOF

    - name: Verify Deployment
      run: |
        ssh -o StrictHostKeyChecking=no -i ec2_key.pem ubuntu@${{ secrets.EC2_PUBLIC_IP }} <<EOF
        kubectl get pods
        kubectl get services
        EOF

    - name: Cleanup
      run: |
        rm -f ec2_key.pem
